name: Deploy WhatsApp Bot to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: whatsapp-bot-app
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '18.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm install

    - name: Make startup script executable
      run: chmod +x startup.sh

    - name: Create web.config
      run: |
        echo '<?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="iisnode" path="startup.sh" verb="*" modules="iisnode" />
            </handlers>
            <rewrite>
              <rules>
                <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                  <match url="^startup.sh\/debug[\/]?" />
                </rule>
                <rule name="StaticContent">
                  <action type="Rewrite" url="public{REQUEST_URI}" />
                </rule>
                <rule name="DynamicContent">
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
                  </conditions>
                  <action type="Rewrite" url="startup.sh" />
                </rule>
              </rules>
            </rewrite>
            <security>
              <requestFiltering>
                <hiddenSegments>
                  <remove segment="bin" />
                </hiddenSegments>
              </requestFiltering>
            </security>
          </system.webServer>
        </configuration>' > web.config

    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
        sudo apt-get install -y libgbm-dev
        sudo apt-get install -y libasound2

    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        startup-command: ./startup.sh